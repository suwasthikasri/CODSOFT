import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a text or provide a file name to count words:");
        String input = scanner.nextLine();

        try {
            String text = readText(input);
            int wordCount = countWords(text);

            System.out.println("Total word count: " + wordCount);

            // Additional features:
            // 7. Ignoring common words or stop words.
            Set<String> stopWords = new HashSet<>(Arrays.asList("the", "and", "in", "to", "of"));
            int nonStopWordCount = countNonStopWords(text, stopWords);
            System.out.println("Total non-stop word count: " + nonStopWordCount);

            // 8. Providing statistics like the number of unique words.
            int uniqueWordCount = countUniqueWords(text);
            System.out.println("Number of unique words: " + uniqueWordCount);

        } catch (IOException e) {
            System.out.println("Error reading the file: " + e.getMessage());
        }
    }

    private static String readText(String input) throws IOException {
        File file = new File(input);
        if (file.isFile()) {
            return Files.readString(Path.of(input));
        } else {
            return input;
        }
    }

    private static int countWords(String text) {
        String[] words = text.split("\\s+|[.,;!?()]");
        return words.length;
    }

    private static int countNonStopWords(String text, Set<String> stopWords) {
        String[] words = text.split("\\s+|[.,;!?()]");
        int count = 0;
        for (String word : words) {
            if (!stopWords.contains(word.toLowerCase())) {
                count++;
            }
        }
        return count;
    }

    private static int countUniqueWords(String text) {
        String[] words = text.split("\\s+|[.,;!?()]");
        Set<String> uniqueWords = new HashSet<>(Arrays.asList(words));
        return uniqueWords.size();
}
}
